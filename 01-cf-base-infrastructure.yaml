AWSTemplateFormatVersion: 2010-09-09

Description: >-
  This Template creates resources for the base infrastructure

Parameters:
  VpcCidrBlock:
    Type: String
    Description: 'VPC Cidr Block'
    Default: '192.168.0.0/16'
  PublicSubnetCidrBlocks:
    Type: CommaDelimitedList
    Description: 'Public Subnet Cidr Blocks'
    Default: '192.168.10.0/24, 192.168.20.0/24, 192.168.30.0/24'
  PrivateSubnetCidrBlocks:
    Type: CommaDelimitedList
    Description: 'Private Subnet Cidr Blocks'
    Default: '192.168.11.0/24, 192.168.21.0/24, 192.168.31.0/24'

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Description: CloudFormation Demo VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-VPC'
  PublicSubnet01:
    Type: AWS::EC2::Subnet 
    Properties:
      AvailabilityZone: !Select [ 0, Fn::GetAZs: !Ref 'AWS::Region' ]
      CidrBlock: !Select [ 0, !Ref PublicSubnetCidrBlocks ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: Public Subnet 01
  PublicSubnet02:
    Type: AWS::EC2::Subnet 
    Properties:
      AvailabilityZone: !Select [ 1, Fn::GetAZs: !Ref AWS::Region ]
      CidrBlock: !Select [ 1, !Ref PublicSubnetCidrBlocks ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: Public Subnet 02
  PublicSubnet03:
    Type: AWS::EC2::Subnet 
    Properties:
      AvailabilityZone: !Select [ 2, Fn::GetAZs: !Ref AWS::Region ]
      CidrBlock: !Select [ 2, !Ref PublicSubnetCidrBlocks ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: Public Subnet 03
  PrivateSubnet01:
    Type: AWS::EC2::Subnet 
    Properties:
      AvailabilityZone: !Select [ 0, Fn::GetAZs: !Ref 'AWS::Region' ]
      CidrBlock: !Select [ 0, !Ref PrivateSubnetCidrBlocks ]
      MapPublicIpOnLaunch: false
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: Private Subnet 01
  PrivateSubnet02:
    Type: AWS::EC2::Subnet 
    Properties:
      AvailabilityZone: !Select [ 1, Fn::GetAZs: !Ref AWS::Region ]
      CidrBlock: !Select [ 1, !Ref PrivateSubnetCidrBlocks ]
      MapPublicIpOnLaunch: false
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: Private Subnet 02
  PrivateSubnet03:
    Type: AWS::EC2::Subnet 
    Properties:
      AvailabilityZone: !Select [ 2, Fn::GetAZs: !Ref AWS::Region ]
      CidrBlock: !Select [ 2, !Ref PrivateSubnetCidrBlocks ]
      MapPublicIpOnLaunch: false
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: Private Subnet 03
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  VpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway
  EipForNatGateway01:
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Name
          Value: EIP for NAT-Gateway 01 
  EipForNatGateway02:
    Type: AWS::EC2::EIP 
    Properties:
      Tags:
        - Key: Name
          Value: EIP for NAT-Gateway 02
  EipForNatGateway03:
    Type: AWS::EC2::EIP 
    Properties:
      Tags:
        - Key: Name
          Value: EIP for NAT-Gateway 03
  NatGateway01:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt EipForNatGateway01.AllocationId
      SubnetId: !Ref PublicSubnet01
      Tags: 
        - Key: Name
          Value: NAT Gateway 01
  NatGateway02:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt EipForNatGateway02.AllocationId
      SubnetId: !Ref PublicSubnet02
      Tags: 
        - Key: Name
          Value: NAT Gateway 02
  NatGateway03:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt EipForNatGateway03.AllocationId
      SubnetId: !Ref PublicSubnet03
      Tags: 
        - Key: Name
          Value: NAT Gateway 03
  PublicRouteTable:
    Type: AWS::EC2::RouteTable 
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: Public Route Table
  PrivateRouteTable01:
    Type: AWS::EC2::RouteTable 
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: Private Route Table 01
  PrivateRouteTable02:
    Type: AWS::EC2::RouteTable 
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: Private Route Table 02
  PrivateRouteTable03:
    Type: AWS::EC2::RouteTable 
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: Private Route Table 03
  PublicInternetRoute:
    Type: AWS::EC2::Route 
    DependsOn:
      - VpcGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: 0.0.0.0/0
  PrivateInternetRoute01:
    Type: AWS::EC2::Route 
    Properties:
      RouteTableId: !Ref PrivateRouteTable01
      NatGatewayId: !Ref NatGateway01
      DestinationCidrBlock: 0.0.0.0/0
  PrivateInternetRoute02:
    Type: AWS::EC2::Route 
    Properties:
      RouteTableId: !Ref PrivateRouteTable02
      NatGatewayId: !Ref NatGateway02
      DestinationCidrBlock: 0.0.0.0/0
  PrivateInternetRoute03:
    Type: AWS::EC2::Route 
    Properties:
      RouteTableId: !Ref PrivateRouteTable03
      NatGatewayId: !Ref NatGateway03
      DestinationCidrBlock: 0.0.0.0/0
  PublicSubnet01RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet01
  PublicSubnet02RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet02
  PublicSubnet03RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet03
  PrivateSubnet01RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable01
      SubnetId: !Ref PrivateSubnet01
  PrivateSubnet02RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable02
      SubnetId: !Ref PrivateSubnet02
  PrivateSubnet03RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable03
      SubnetId: !Ref PrivateSubnet03
